% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting_utilities.R
\name{tune_rf}
\alias{tune_rf}
\title{Random Forest Tuning over mtry with \%IncMSE Importances}
\usage{
tune_rf(x, y, mtry_grid = 1:floor(sqrt(ncol(x))), ntree = 500)
}
\arguments{
\item{x}{A data frame or matrix of predictors (rows = samples, cols = features).}

\item{y}{A numeric response vector (same length as \code{nrow(x)}).}

\item{mtry_grid}{Integer vector of \code{mtry} values to try.
If \code{NULL}, a small grid is generated automatically.}

\item{ntree}{Integer. Number of trees for each Random Forest (default \code{500}).}
}
\value{
A list with:
\itemize{
\item \code{model}: the best \code{randomForest} object found;
\item \code{feature_importance}: a one-column matrix with rownames = predictors
and column \code{"\%IncMSE"}.
}
}
\description{
Fits multiple Random Forests over a grid of \code{mtry} values and selects
the model with the lowest in-sample MSE. Returns the best model and its
variable importances (\\%IncMSE).
}
\details{
The score minimized is the in-sample Mean Squared Error on \code{y} vs
\code{predict(model, x)}. Importances are extracted from the best model via
\code{randomForest::importance()} and the \code{"\%IncMSE"} column is returned.
}
\examples{
\dontrun{
set.seed(1)
x <- as.data.frame(matrix(rnorm(200*5), 200, 5))
y <- x[[1]] * 2 + rnorm(200)
out <- tune_rf(x, y, mtry_grid = 1:5, ntree = 300)
str(out$feature_importance)
}

}
